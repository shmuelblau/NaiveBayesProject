version: '3.8'

services:
  
  trainer:
    build: ./trainer
    restart: always
    ports:
      - "8000:8000"
    
    command: ["uvicorn", "main:app", "--reload", "--host", "0.0.0.0", "--port", "8000"]

    volumes:
      - Models-data:/app/data
      - logs:/app/logs
    networks:
      Models:



  predicter:
    build: ./predicter
    restart: always
    ports:
      - "8001:8000"
    
    command: ["uvicorn", "main:app", "--reload", "--host", "0.0.0.0", "--port", "8000"]
    volumes:
      - Models-data:/app/data
      - logs:/app/logs
    networks:
      Models:




  converter:
    build: ./converter
    restart: always
    ports:
      - "8002:8000"
    
    command: ["uvicorn", "main:app", "--reload", "--host", "0.0.0.0", "--port", "8000"]

    volumes:
      - logs:/app/logs
    networks:
      Models:



  cleaner:
    build: ./cleaner

    restart: always
    ports:
      - "8003:8000"
    
    command: ["uvicorn", "main:app", "--reload", "--host", "0.0.0.0", "--port", "8000"]

    volumes:
      - logs:/app/logs
    networks:
      Models:



  dashboard:
    build: ./dashboard

    restart: always
    ports:
      - "8004:8501"
    command: ["streamlit", "run", "dashboard.py"]

    networks:
      Models:



  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "8005:9200"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    networks:
      db:

  
  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      db:


  filebeat:
    image: docker.elastic.co/beats/filebeat:8.13.4
    container_name: filebeat
    user: root
    volumes:
      - ./DB/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - logs:/logs
    command: ["sh", "-c", "chmod go-w /usr/share/filebeat/filebeat.yml && filebeat -e"]
    depends_on:
      - elasticsearch
    networks:
      db:



volumes:
  Models-data:
  logs:
  elastic_data:

networks:
  db:
  Models: